generation_number = 0
while generation_number <= desired_number_of_generations:
    # get last generation population
    if generation_number == 0:
        last_generation_population = get_compounds_from_source_molecules(source_molecules)
    else:
        last_generation_population = get_compounds_from_generation(generation_number - 1)

    ## Populate a single generation
    crossover_seed_pool = get_seed_pool(last_generation_population, number_seed_via_diversity, number_seed_via_docking_fitness)
    crossover_ligands = []
    while len(crossover_ligands) < desired_number_of_crossovers:
        new_crossovers = make_crossovers(crossover_seed_pool)
        crossovers_pass_filters = filter_ligands(new_crossovers, filters_to_use)
        crossover_ligands.extend(make_crossovers(crossover_seed_pool))

